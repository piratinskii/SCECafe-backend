plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'il.sce'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '18'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.7.1'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'commons-io', name: 'commons-io', version: '2.7'
    implementation 'org.springframework.security:spring-security-config'
}

task configureDatabase {
    doLast {
        def host = project.hasProperty('dbHost') ? project.dbHost : 'localhost'
        def port = project.hasProperty('dbPort') ? project.dbPort : '5432'
        def name = project.hasProperty('dbName') ? project.dbName : 'postgres'
        def username = project.hasProperty('dbUsername') ? project.dbUsername : 'postgres'
        def password = project.hasProperty('dbPassword') ? project.dbPassword : 'postgres'

        System.setProperty('db.host', host)
        System.setProperty('db.port', port)
        System.setProperty('db.name', name)
        System.setProperty('db.username', username)
        System.setProperty('db.password', password)
    }
}

bootRun {
    dependsOn configureDatabase
    systemProperty 'db.host', System.getProperty('db.host')
    systemProperty 'db.port', System.getProperty('db.port')
    systemProperty 'db.name', System.getProperty('db.name')
    systemProperty 'db.username', System.getProperty('db.username')
    systemProperty 'db.password', System.getProperty('db.password')
}


tasks.named('test') {
    useJUnitPlatform()
}

